import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { ArrowLeft, Brain, Target, Lightbulb } from 'lucide-react';

interface LeapOfFaithBuilderProps {
  cpsData: {
    customer: string;
    problem: string;
    solution: string;
  };
  onBack: () => void;
  onNext: () => void;
}

interface AssumptionAnalysis {
  assumptions: string[];
  isAnalyzing: boolean;
}

const LeapOfFaithBuilder = ({ cpsData, onBack, onNext }: LeapOfFaithBuilderProps) => {
  const [selectedCircle, setSelectedCircle] = useState<string | null>(null);
  const [analysis, setAnalysis] = useState<AssumptionAnalysis>({
    assumptions: [],
    isAnalyzing: false
  });

  const handleCircleClick = async (circleType: string) => {
    setSelectedCircle(circleType);
    setAnalysis({ assumptions: [], isAnalyzing: true });

    // Simulate AI analysis
    setTimeout(() => {
      const mockAssumptions = generateMockAssumptions(cpsData, circleType);
      setAnalysis({
        assumptions: mockAssumptions,
        isAnalyzing: false
      });
    }, 2000);
  };

  const generateMockAssumptions = (data: any, type: string) => {
    // Generate assumptions based on the CPS data
    const assumptions = [
      `[LOFA #1]: ${data.customer} are actively seeking solutions to ${data.problem.toLowerCase()}.`,
      `[LOFA #2]: ${data.customer} are willing to adopt ${data.solution.toLowerCase()} as their preferred approach.`,
      `[LOFA #3]: ${data.solution} will effectively address the core pain points experienced by ${data.customer}.`
    ];
    
    return assumptions;
  };

  const circles = [
    {
      id: 'leap-of-faith',
      title: 'Leap of Faith',
      icon: Target,
      position: 'top-1/4 left-1/4',
      color: 'construction-yellow'
    },
    {
      id: 'assumption',
      title: 'Assumption',
      icon: Brain,
      position: 'top-1/3 right-1/4',
      color: 'construction-orange'
    },
    {
      id: 'hypothesis',
      title: 'Respective Hypothesis',
      icon: Lightbulb,
      position: 'bottom-1/4 left-1/2 transform -translate-x-1/2',
      color: 'construction-green'
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-background via-background to-muted/20 relative overflow-hidden">
      {/* Blueprint grid background */}
      <div 
        className="absolute inset-0 opacity-10 pointer-events-none"
        style={{
          backgroundImage: `
            linear-gradient(hsl(var(--blueprint-blue)) 1px, transparent 1px),
            linear-gradient(90deg, hsl(var(--blueprint-blue)) 1px, transparent 1px)
          `,
          backgroundSize: '40px 40px'
        }}
      />

      <div className="relative z-10 container mx-auto px-4 py-8">
        {/* Header */}
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold mb-4 text-foreground">
            Hypothesis Validation Framework
          </h1>
          <div className="max-w-4xl mx-auto space-y-4 text-muted-foreground">
            <p className="text-lg">
              Welcome to your Hypothesis Validation Framework! ðŸŽ‰
            </p>
            <p>
              This is where we start turning your ideas into testable assumptions. You'll dive into your leap of faith assumptionsâ€”those core beliefs that, if wrong, could jeopardize your entire business idea. Click on any of the circles to explore each step and get insights generated by our AI Lean Startup Strategist. Don't worry, we've got your back!
            </p>
            <p className="font-semibold">
              Start by clicking through to identify those leap-of-faith assumptions. These assumptions are critical to moving your idea forward with confidence!
            </p>
          </div>
        </div>

        {/* Interactive Circles */}
        <div className="relative h-96 mb-12">
          {circles.map((circle) => {
            const IconComponent = circle.icon;
            return (
              <button
                key={circle.id}
                onClick={() => handleCircleClick(circle.id)}
                className={`absolute ${circle.position} w-36 h-36 rounded-full border-4 border-${circle.color} bg-background/80 backdrop-blur-sm hover:bg-${circle.color}/10 transition-all duration-300 hover:scale-105 flex flex-col items-center justify-center group shadow-lg animate-fade-in`}
              >
                <IconComponent className={`w-12 h-12 text-${circle.color} mb-2`} />
                <span className={`text-sm font-semibold text-${circle.color} text-center leading-tight`}>
                  {circle.title}
                </span>
              </button>
            );
          })}
        </div>

        {/* AI Analysis Section */}
        {selectedCircle && (
          <div className="bg-card/80 backdrop-blur-sm rounded-lg p-6 mb-8 border shadow-lg">
            <div className="flex items-center gap-2 mb-4">
              <Brain className="w-6 h-6 text-primary" />
              <h3 className="text-xl font-bold">ðŸš€ Your Lean Startup Strategist is here!</h3>
            </div>
            
            <p className="text-muted-foreground mb-6">
              Let's dig deep into your CPS (Customerâ€“Problemâ€“Solution) to extract Leap of Faith Assumptions (LOFAs). These are the assumptions that, if proven false, could make or break your business.
            </p>
            
            <p className="text-muted-foreground mb-6">
              We'll examine your customer, the problem, and the proposed solution to pinpoint those critical assumptions that need validation.
            </p>

            {analysis.isAnalyzing ? (
              <div className="flex items-center gap-2 text-muted-foreground">
                <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-primary"></div>
                Analyzing your assumptions...
              </div>
            ) : analysis.assumptions.length > 0 ? (
              <div>
                <h4 className="text-lg font-semibold mb-4">ðŸ§  Assumptions Identified for Your Business Idea:</h4>
                <div className="space-y-3">
                  {analysis.assumptions.map((assumption, index) => (
                    <div key={index} className="bg-muted/50 p-3 rounded-lg">
                      <p className="text-foreground">{assumption}</p>
                    </div>
                  ))}
                </div>
              </div>
            ) : null}
          </div>
        )}

        {/* Action Buttons */}
        <div className="flex justify-between items-center">
          <Button 
            variant="outline" 
            onClick={onBack}
            className="flex items-center gap-2"
          >
            <ArrowLeft className="w-4 h-4" />
            Back to CPS Builder
          </Button>
          
          <div className="text-center">
            <p className="text-sm text-muted-foreground mb-2">
              Feel like tweaking your answers? No problem! Click "Back to CPS Builder" to revisit your Customer, Problem, and Solution statement.
            </p>
          </div>

          <Button 
            onClick={onNext}
            className="bg-primary hover:bg-primary/90"
          >
            Next Step
          </Button>
        </div>
        
        <div className="text-center mt-4">
          <p className="text-sm text-muted-foreground">
            Ready to move to the next phase? Click "Next Step" to get actionable insights based on your answers in the CPS Hypothesis Builder and continue strengthening your framework.
          </p>
        </div>
      </div>
    </div>
  );
};

export default LeapOfFaithBuilder;